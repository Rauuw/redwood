// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  createdAt DateTime @default(now())
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model User {
  id             Int @id @default(autoincrement())
  email          String  @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  id_role             Int
  role      Role     @relation(fields: [id_role], references: [id])
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Car {
  id     Int    @id @default(autoincrement())
  marca  String
  modelo String
  placa  String @unique
  ano    Int
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  phone     String
  email     String   @unique
  createdAt DateTime @default(now())
  trucks    Truck[]
  drivers   Driver[]
  details   Detail[]
}

model Truck {
  id         Int      @id @default(autoincrement())
  marca      String
  modelo     String
  placa      String   @unique
  ano        Int
  id_company Int
  company    Company  @relation(fields: [id_company], references: [id])
  details    Detail[]
}

model Driver {
  id         Int      @id @default(autoincrement())
  name       String
  cpf        String   @unique
  birthDate  DateTime
  phone      String
  email      String   @unique
  id_company Int
  company    Company  @relation(fields: [id_company], references: [id])
  details    Detail[]
}

model Order {
  id          Int      @id @default(autoincrement())
  origin      String
  destination String
  date        DateTime
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  detail      Detail[]
}

model Detail {
  id         Int     @id @default(autoincrement())
  id_order   Int
  id_company Int
  id_truck   Int
  id_driver  Int
  order      Order   @relation(fields: [id_order], references: [id])
  company    Company @relation(fields: [id_company], references: [id])
  truck      Truck   @relation(fields: [id_truck], references: [id])
  driver     Driver  @relation(fields: [id_driver], references: [id])
}
